{"ast":null,"code":"import _asyncToGenerator from \"/home/herm/OneDrive/LinuxLite/Progra/DesarrolloWeb/Angular/Projects/recipes-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { DataSource } from '@angular/cdk/collections';\nimport { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class IngredientsDBService {\n  constructor(http) {\n    this.http = http;\n    this.URL_API = 'http://localhost:4000/api/ingredient';\n    this.ING_DATA = [{\n      name: ''\n    }];\n    this.ING_DATA_SOURCE = new MyDataSource(this.ING_DATA);\n  }\n\n  getIngredientsDB() {\n    return this.http.get(this.URL_API);\n  }\n\n  removeIngredient(id) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(`Service ${id}`);\n      yield _this.http.delete(`${_this.URL_API}/delete/${id}`).subscribe(res => res, err => console.log(err)); // this.ING_DATA_SOURCE.setIngredient(this.ING_DATA);\n    })();\n  }\n\n}\n\nIngredientsDBService.ɵfac = function IngredientsDBService_Factory(t) {\n  return new (t || IngredientsDBService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nIngredientsDBService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: IngredientsDBService,\n  factory: IngredientsDBService.ɵfac,\n  providedIn: 'root'\n});\n\nclass MyDataSource extends DataSource {\n  constructor(initialData) {\n    super();\n    this._dataStream = new ReplaySubject();\n    this.setIngredient(initialData);\n  }\n\n  connect() {\n    return this._dataStream;\n  }\n\n  disconnect() {}\n\n  setIngredient(ingredient) {\n    this._dataStream.next(ingredient);\n  }\n\n}","map":{"version":3,"sources":["/home/herm/OneDrive/LinuxLite/Progra/DesarrolloWeb/Angular/Projects/recipes-app/frontend/src/app/services/ingredientsDB.service.ts"],"names":["DataSource","ReplaySubject","i0","i1","IngredientsDBService","constructor","http","URL_API","ING_DATA","name","ING_DATA_SOURCE","MyDataSource","getIngredientsDB","get","removeIngredient","id","console","log","delete","subscribe","res","err","ɵfac","IngredientsDBService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","initialData","_dataStream","setIngredient","connect","disconnect","ingredient","next"],"mappings":";AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,QAA8B,MAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,oBAAN,CAA2B;AAC9BC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAe,sCAAf;AACA,SAAKC,QAAL,GAAgB,CACZ;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADY,CAAhB;AAGA,SAAKC,eAAL,GAAuB,IAAIC,YAAJ,CAAiB,KAAKH,QAAtB,CAAvB;AACH;;AACDI,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKN,IAAL,CAAUO,GAAV,CAAc,KAAKN,OAAnB,CAAP;AACH;;AACKO,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AAAA;;AAAA;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAa,WAAUF,EAAG,EAA1B;AACA,YAAM,KAAI,CAACT,IAAL,CAAUY,MAAV,CAAkB,GAAE,KAAI,CAACX,OAAQ,WAAUQ,EAAG,EAA9C,EAAiDI,SAAjD,CAA2DC,GAAG,IAAIA,GAAlE,EAAuEC,GAAG,IAAIL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAA9E,CAAN,CAFuB,CAGvB;AAHuB;AAI1B;;AAhB6B;;AAkBlCjB,oBAAoB,CAACkB,IAArB,GAA4B,SAASC,4BAAT,CAAsCC,CAAtC,EAAyC;AAAE,SAAO,KAAKA,CAAC,IAAIpB,oBAAV,EAAgCF,EAAE,CAACuB,QAAH,CAAYtB,EAAE,CAACuB,UAAf,CAAhC,CAAP;AAAqE,CAA5I;;AACAtB,oBAAoB,CAACuB,KAArB,GAA6B,aAAczB,EAAE,CAAC0B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEzB,oBAAT;AAA+B0B,EAAAA,OAAO,EAAE1B,oBAAoB,CAACkB,IAA7D;AAAmES,EAAAA,UAAU,EAAE;AAA/E,CAAtB,CAA3C;;AACA,MAAMpB,YAAN,SAA2BX,UAA3B,CAAsC;AAClCK,EAAAA,WAAW,CAAC2B,WAAD,EAAc;AACrB;AACA,SAAKC,WAAL,GAAmB,IAAIhC,aAAJ,EAAnB;AACA,SAAKiC,aAAL,CAAmBF,WAAnB;AACH;;AACDG,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKF,WAAZ;AACH;;AACDG,EAAAA,UAAU,GAAG,CAAG;;AAChBF,EAAAA,aAAa,CAACG,UAAD,EAAa;AACtB,SAAKJ,WAAL,CAAiBK,IAAjB,CAAsBD,UAAtB;AACH;;AAZiC","sourcesContent":["import { DataSource } from '@angular/cdk/collections';\nimport { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class IngredientsDBService {\n    constructor(http) {\n        this.http = http;\n        this.URL_API = 'http://localhost:4000/api/ingredient';\n        this.ING_DATA = [\n            { name: '' }\n        ];\n        this.ING_DATA_SOURCE = new MyDataSource(this.ING_DATA);\n    }\n    getIngredientsDB() {\n        return this.http.get(this.URL_API);\n    }\n    async removeIngredient(id) {\n        console.log(`Service ${id}`);\n        await this.http.delete(`${this.URL_API}/delete/${id}`).subscribe(res => res, err => console.log(err));\n        // this.ING_DATA_SOURCE.setIngredient(this.ING_DATA);\n    }\n}\nIngredientsDBService.ɵfac = function IngredientsDBService_Factory(t) { return new (t || IngredientsDBService)(i0.ɵɵinject(i1.HttpClient)); };\nIngredientsDBService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: IngredientsDBService, factory: IngredientsDBService.ɵfac, providedIn: 'root' });\nclass MyDataSource extends DataSource {\n    constructor(initialData) {\n        super();\n        this._dataStream = new ReplaySubject();\n        this.setIngredient(initialData);\n    }\n    connect() {\n        return this._dataStream;\n    }\n    disconnect() { }\n    setIngredient(ingredient) {\n        this._dataStream.next(ingredient);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}