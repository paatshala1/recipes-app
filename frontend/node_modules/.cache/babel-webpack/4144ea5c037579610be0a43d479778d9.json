{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"src/app/services/ingredientsDB.service\";\nimport * as i4 from \"src/app/services/measures.service\";\nimport * as i5 from \"src/app/services/categories.service\";\nimport * as i6 from \"src/app/services/levels.service\";\nimport * as i7 from \"src/app/services/equipments.service\";\nimport * as i8 from \"../add-edit-delete/add-edit-delete.component\";\nimport * as i9 from \"@angular/router\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"@angular/material/button\";\n\nfunction AddEditDeleteDetailComponent_label_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 8);\n    i0.ɵɵtext(1, \"Debe agregar imagen de categor\\u00EDa\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditDeleteDetailComponent_input_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 9);\n    i0.ɵɵlistener(\"change\", function AddEditDeleteDetailComponent_input_9_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onFileSelected($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddEditDeleteDetailComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵtext(1, \"Agregar\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r3.EntryForm.invalid);\n  }\n}\n\nfunction AddEditDeleteDetailComponent_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵtext(1, \"Actualizar\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AddEditDeleteDetailComponent = /*#__PURE__*/(() => {\n  class AddEditDeleteDetailComponent {\n    constructor(_fb, _snackbar, ingsDBService, measuresService, categoriesService, levelsService, equipmentsService, addEditDeleteComponent, _router) {\n      this._fb = _fb;\n      this._snackbar = _snackbar;\n      this.ingsDBService = ingsDBService;\n      this.measuresService = measuresService;\n      this.categoriesService = categoriesService;\n      this.levelsService = levelsService;\n      this.equipmentsService = equipmentsService;\n      this.addEditDeleteComponent = addEditDeleteComponent;\n      this._router = _router;\n      let currentURL = this._router.url;\n\n      if (currentURL == '/categorias') {\n        this.EntryForm = this._fb.group({\n          name: new FormControl('', Validators.required),\n          catImage: new FormControl('', Validators.required)\n        });\n      } else {\n        this.EntryForm = this._fb.group({\n          name: new FormControl('', Validators.required)\n        });\n      }\n    }\n\n    ngOnInit() {} // Type changed to any to accept FormGroup or FormData...\n\n\n    addByType(form) {\n      const currentURL = this._router.url;\n\n      switch (currentURL) {\n        case '/categorias':\n          const fd = new FormData();\n          fd.append('catImage', this.file);\n          fd.append('name', form.value.name);\n          fd.append('route', form.value.name.toLowerCase());\n          return this.categoriesService.addCategory(fd);\n          break;\n\n        case '/ingredientes':\n          return this.ingsDBService.addIngredient(form);\n          break;\n\n        case '/medidas':\n          return this.measuresService.addMeasure(form);\n          break;\n\n        case '/niveles':\n          return this.levelsService.addLevel(form);\n          break;\n\n        case '/equipos':\n          return this.equipmentsService.addEquipment(form);\n          break;\n\n        default:\n          throw new Error('ENTRADA NO VALIDA');\n      }\n    }\n\n    addOrEditEntry(form) {\n      // console.log(form.value);\n      // console.log(this.editMode[0]);\n      if (this.editMode[1]) {\n        // console.log('EDITING');\n        this.setEditValues().then(entrySet => {\n          this.editByType(form, this.editMode[0]._id).subscribe(res => {\n            this.refreshEntries(form);\n          }, err => console.log(err));\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        // console.log('ADDING');\n        this.addByType(form).subscribe(res => {\n          this.refreshEntries(form);\n        }, err => console.log(err)); // formDirective.resetForm();\n      }\n    }\n\n    editByType(form, id) {\n      const currentURL = this._router.url;\n\n      switch (currentURL) {\n        case '/categorias':\n          return this.categoriesService.editCategory(form, id);\n          break;\n\n        case '/ingredientes':\n          return this.ingsDBService.editIngredient(form, id);\n          break;\n\n        case '/medidas':\n          return this.measuresService.editMeasure(form, id);\n          break;\n\n        case '/niveles':\n          return this.levelsService.editLevel(form, id);\n          break;\n\n        case '/equipos':\n          return this.equipmentsService.editEquipment(form, id);\n          break;\n\n        default:\n          throw new Error('ENTRADA NO VALIDA');\n      }\n    }\n\n    onFileSelected(event) {\n      if (event.target.files && event.target.files[0]) {\n        this.file = event.target.files[0];\n      }\n    }\n\n    refreshEntries(form) {\n      this.addEditDeleteComponent.loadEntries();\n      form.reset('');\n      this._router.url == '/categorias' ? form.setValue({\n        name: '',\n        catImage: ''\n      }) : form.setValue({\n        name: ''\n      });\n      this.editMode[0] = {\n        name: '',\n        _id: '',\n        notes: ''\n      };\n      this.editMode[1] = false;\n\n      this._snackbar.open('Acción procesada exitosamente', '', {\n        verticalPosition: 'top',\n        duration: 1500,\n        horizontalPosition: 'right'\n      });\n    }\n\n    setEditValues() {\n      return new Promise((resolve, reject) => {\n        var _a, _b;\n\n        if ((_a = this.EntryForm.get('name')) === null || _a === void 0 ? void 0 : _a.pristine) {\n          (_b = this.EntryForm.get('name')) === null || _b === void 0 ? void 0 : _b.setValue(this.editMode[0].name);\n        }\n\n        resolve();\n      });\n    }\n\n  }\n\n  AddEditDeleteDetailComponent.ɵfac = function AddEditDeleteDetailComponent_Factory(t) {\n    return new (t || AddEditDeleteDetailComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.IngredientsDBService), i0.ɵɵdirectiveInject(i4.MeasuresService), i0.ɵɵdirectiveInject(i5.CategoriesService), i0.ɵɵdirectiveInject(i6.LevelsService), i0.ɵɵdirectiveInject(i7.EquipmentsService), i0.ɵɵdirectiveInject(i8.AddEditDeleteComponent), i0.ɵɵdirectiveInject(i9.Router));\n  };\n\n  AddEditDeleteDetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditDeleteDetailComponent,\n    selectors: [[\"app-add-edit-delete-detail\"]],\n    inputs: {\n      editMode: \"editMode\",\n      confElement: \"confElement\"\n    },\n    decls: 12,\n    vars: 8,\n    consts: [[\"enctype\", \"multipart/form-data\", \"method\", \"POST\", 1, \"newElement\", 3, \"formGroup\", \"ngSubmit\"], [1, \"newInfo\"], [\"type\", \"text\", \"matInput\", \"\", \"autocomplete\", \"off\", \"formControlName\", \"name\", \"required\", \"\", 3, \"placeholder\", \"value\"], [\"ingInput\", \"\"], [\"for\", \"catImage\", 4, \"ngIf\"], [\"type\", \"file\", \"formControlName\", \"catImage\", \"id\", \"catImage\", \"aria-label\", \"category image\", 3, \"change\", 4, \"ngIf\"], [\"class\", \"acceptButton\", \"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"acceptButton\", \"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 4, \"ngIf\"], [\"for\", \"catImage\"], [\"type\", \"file\", \"formControlName\", \"catImage\", \"id\", \"catImage\", \"aria-label\", \"category image\", 3, \"change\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"acceptButton\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"acceptButton\"]],\n    template: function AddEditDeleteDetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditDeleteDetailComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.addOrEditEntry(ctx.EntryForm);\n        });\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"mat-form-field\");\n        i0.ɵɵelementStart(4, \"mat-label\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2, 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, AddEditDeleteDetailComponent_label_8_Template, 2, 0, \"label\", 4);\n        i0.ɵɵtemplate(9, AddEditDeleteDetailComponent_input_9_Template, 1, 0, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, AddEditDeleteDetailComponent_button_10_Template, 2, 1, \"button\", 6);\n        i0.ɵɵtemplate(11, AddEditDeleteDetailComponent_button_11_Template, 2, 0, \"button\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.EntryForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\\u00A0\\u00A0 \", ctx.confElement, \"\\u00A0\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", ctx.confElement);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.editMode[0].name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.confElement == \"Categor\\u00EDa\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.confElement == \"Categor\\u00EDa\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.editMode[1]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode[1]);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i10.MatFormField, i10.MatLabel, i11.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i12.NgIf, i13.MatButton],\n    styles: [\"input[_ngcontent-%COMP%]{height:2.2rem;font-size:1.82rem}mat-form-field[_ngcontent-%COMP%], button[_ngcontent-%COMP%]{margin:1rem}#catImage[_ngcontent-%COMP%]{height:auto;font-size:initial}.newElement[_ngcontent-%COMP%]{display:flex;align-items:center}.newInfo[_ngcontent-%COMP%]{display:flex;flex-direction:column}.ng-invalid.ng-untouched[_ngcontent-%COMP%]:not(form):not(div):not(mat-form-field){border-left:5px solid #42A948}.ng-invalid.ng-touched[_ngcontent-%COMP%]:not(form):not(div){border-left:5px solid #a94442}\"]\n  });\n  return AddEditDeleteDetailComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}