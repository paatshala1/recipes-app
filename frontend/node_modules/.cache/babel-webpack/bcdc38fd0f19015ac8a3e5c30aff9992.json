{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/ingredientsDB.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"../ingredientsDB/ingredientsDB.component\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nconst _c0 = [\"ingInput\"];\n\nfunction CreateIngredientComponent_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵtext(1, \"Agregar\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.IngredientForm.invalid);\n  }\n}\n\nfunction CreateIngredientComponent_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵtext(1, \"Actualizar\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let CreateIngredientComponent = /*#__PURE__*/(() => {\n  class CreateIngredientComponent {\n    constructor(formBuilder, ingsDBService, _snackbar, ingsDbComp) {\n      this.formBuilder = formBuilder;\n      this.ingsDBService = ingsDBService;\n      this._snackbar = _snackbar;\n      this.ingsDbComp = ingsDbComp;\n      this.IngredientForm = this.formBuilder.group({\n        name: ['', Validators.required],\n        notes: ['']\n      });\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {// this.ingInputElement.nativeElement.focus();\n    }\n\n    addOrEditIngredient(form) {\n      // console.log(form.value);\n      // console.log(this.editMode[0]);\n      if (!this.editMode[1]) {\n        // console.log('ADDING');\n        this.ingsDBService.addIngredient(form.value).subscribe(res => {\n          this.ingsDbComp.loadIngredientsDB();\n          form.reset('');\n          form.setValue({\n            name: '',\n            notes: ''\n          });\n\n          this._snackbar.open('Ingrediente creado exitosamente', '', {\n            verticalPosition: 'top',\n            duration: 1500,\n            horizontalPosition: 'right'\n          });\n        }, err => console.log(err)); // formDirective.resetForm(); \n      } else {\n        // console.log('EDITING');\n        this.setEditValues().then(ingsSet => {\n          this.ingsDBService.updateIngredient(form.value, this.editMode[0]._id).subscribe(res => {\n            form.reset();\n            this.editMode[0] = {\n              name: '',\n              _id: '',\n              notes: ''\n            };\n            this.editMode[1] = false;\n            this.ingsDbComp.loadIngredientsDB();\n          }, err => console.log(err));\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n\n    setEditValues() {\n      return new Promise((resolve, reject) => {\n        var _a, _b, _c, _d;\n\n        if ((_a = this.IngredientForm.get('name')) === null || _a === void 0 ? void 0 : _a.pristine) {\n          (_b = this.IngredientForm.get('name')) === null || _b === void 0 ? void 0 : _b.setValue(this.editMode[0].name);\n        }\n\n        if ((_c = this.IngredientForm.get('notes')) === null || _c === void 0 ? void 0 : _c.pristine) {\n          (_d = this.IngredientForm.get('notes')) === null || _d === void 0 ? void 0 : _d.setValue(this.editMode[0].notes);\n        }\n\n        resolve();\n      });\n    }\n\n  }\n\n  CreateIngredientComponent.ɵfac = function CreateIngredientComponent_Factory(t) {\n    return new (t || CreateIngredientComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.IngredientsDBService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.IngredientsDBComponent));\n  };\n\n  CreateIngredientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateIngredientComponent,\n    selectors: [[\"app-create-ingredient\"]],\n    viewQuery: function CreateIngredientComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ingInputElement = _t.first);\n      }\n    },\n    inputs: {\n      editMode: \"editMode\"\n    },\n    decls: 13,\n    vars: 5,\n    consts: [[1, \"newIngredient\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"matInput\", \"\", \"autocomplete\", \"off\", \"placeholder\", \".\", \"formControlName\", \"name\", \"required\", \"\", 3, \"value\"], [\"ingInput\", \"\"], [\"type\", \"text\", \"matInput\", \"\", \"autocomplete\", \"off\", \"placeholder\", \".\", \"formControlName\", \"notes\", 3, \"value\"], [\"class\", \"acceptButton\", \"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"acceptButton\", \"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"acceptButton\", 3, \"disabled\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"acceptButton\"]],\n    template: function CreateIngredientComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateIngredientComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.addOrEditIngredient(ctx.IngredientForm);\n        });\n        i0.ɵɵelementStart(2, \"mat-form-field\");\n        i0.ɵɵelementStart(3, \"mat-label\");\n        i0.ɵɵtext(4, \"\\u00A0\\u00A0 Ingrediente\\u00A0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 1, 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\");\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Notas (no obligatorio)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(11, CreateIngredientComponent_button_11_Template, 2, 1, \"button\", 4);\n        i0.ɵɵtemplate(12, CreateIngredientComponent_button_12_Template, 2, 0, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.IngredientForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.editMode[0].name);\n        i0.ɵɵadvance(5);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.editMode[0].notes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.editMode[1]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode[1]);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatFormField, i5.MatLabel, i6.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i7.NgIf, i8.MatButton],\n    styles: [\"input[_ngcontent-%COMP%]{height:2.2rem;font-size:1.82rem}mat-form-field[_ngcontent-%COMP%], button[_ngcontent-%COMP%]{margin:1rem}.newIngredient[_ngcontent-%COMP%]{display:flex;align-items:center}.ng-invalid.ng-untouched[_ngcontent-%COMP%]:not(form):not(div):not(mat-form-field){border-left:5px solid #42A948}.ng-invalid.ng-touched[_ngcontent-%COMP%]:not(form):not(div){border-left:5px solid #a94442}\"]\n  });\n  return CreateIngredientComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}